// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_tinypb_server.proto

#include "test_tinypb_server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR queryAgeReq::queryAgeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.req_no_)*/0
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct queryAgeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queryAgeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~queryAgeReqDefaultTypeInternal() {}
  union {
    queryAgeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queryAgeReqDefaultTypeInternal _queryAgeReq_default_instance_;
PROTOBUF_CONSTEXPR queryAgeRes::queryAgeRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.res_info_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ret_code_)*/0
  , /*decltype(_impl_.req_no_)*/0
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct queryAgeResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queryAgeResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~queryAgeResDefaultTypeInternal() {}
  union {
    queryAgeRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queryAgeResDefaultTypeInternal _queryAgeRes_default_instance_;
PROTOBUF_CONSTEXPR queryNameReq::queryNameReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.req_no_)*/0
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct queryNameReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queryNameReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~queryNameReqDefaultTypeInternal() {}
  union {
    queryNameReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queryNameReqDefaultTypeInternal _queryNameReq_default_instance_;
PROTOBUF_CONSTEXPR queryNameRes::queryNameRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.res_info_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ret_code_)*/0
  , /*decltype(_impl_.req_no_)*/0
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct queryNameResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR queryNameResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~queryNameResDefaultTypeInternal() {}
  union {
    queryNameRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 queryNameResDefaultTypeInternal _queryNameRes_default_instance_;
static ::_pb::Metadata file_level_metadata_test_5ftinypb_5fserver_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_test_5ftinypb_5fserver_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* file_level_service_descriptors_test_5ftinypb_5fserver_2eproto[1];

const uint32_t TableStruct_test_5ftinypb_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::queryAgeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::queryAgeReq, _impl_.req_no_),
  PROTOBUF_FIELD_OFFSET(::queryAgeReq, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::queryAgeRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::queryAgeRes, _impl_.ret_code_),
  PROTOBUF_FIELD_OFFSET(::queryAgeRes, _impl_.res_info_),
  PROTOBUF_FIELD_OFFSET(::queryAgeRes, _impl_.req_no_),
  PROTOBUF_FIELD_OFFSET(::queryAgeRes, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::queryAgeRes, _impl_.age_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::queryNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::queryNameReq, _impl_.req_no_),
  PROTOBUF_FIELD_OFFSET(::queryNameReq, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::queryNameReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::queryNameRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::queryNameRes, _impl_.ret_code_),
  PROTOBUF_FIELD_OFFSET(::queryNameRes, _impl_.res_info_),
  PROTOBUF_FIELD_OFFSET(::queryNameRes, _impl_.req_no_),
  PROTOBUF_FIELD_OFFSET(::queryNameRes, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::queryNameRes, _impl_.name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::queryAgeReq)},
  { 8, -1, -1, sizeof(::queryAgeRes)},
  { 19, -1, -1, sizeof(::queryNameReq)},
  { 28, -1, -1, sizeof(::queryNameRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_queryAgeReq_default_instance_._instance,
  &::_queryAgeRes_default_instance_._instance,
  &::_queryNameReq_default_instance_._instance,
  &::_queryNameRes_default_instance_._instance,
};

const char descriptor_table_protodef_test_5ftinypb_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030test_tinypb_server.proto\")\n\013queryAgeRe"
  "q\022\016\n\006req_no\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\"Z\n\013queryAg"
  "eRes\022\020\n\010ret_code\030\001 \001(\005\022\020\n\010res_info\030\002 \001(\t"
  "\022\016\n\006req_no\030\003 \001(\005\022\n\n\002id\030\004 \001(\005\022\013\n\003age\030\005 \001("
  "\005\"8\n\014queryNameReq\022\016\n\006req_no\030\001 \001(\005\022\n\n\002id\030"
  "\002 \001(\005\022\014\n\004type\030\003 \001(\005\"\\\n\014queryNameRes\022\020\n\010r"
  "et_code\030\001 \001(\005\022\020\n\010res_info\030\002 \001(\t\022\016\n\006req_n"
  "o\030\003 \001(\005\022\n\n\002id\030\004 \001(\005\022\014\n\004name\030\005 \001(\t2c\n\014Que"
  "ryService\022*\n\nquery_name\022\r.queryNameReq\032\r"
  ".queryNameRes\022\'\n\tquery_age\022\014.queryAgeReq"
  "\032\014.queryAgeResB\003\200\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_test_5ftinypb_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_test_5ftinypb_5fserver_2eproto = {
    false, false, 427, descriptor_table_protodef_test_5ftinypb_5fserver_2eproto,
    "test_tinypb_server.proto",
    &descriptor_table_test_5ftinypb_5fserver_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_test_5ftinypb_5fserver_2eproto::offsets,
    file_level_metadata_test_5ftinypb_5fserver_2eproto, file_level_enum_descriptors_test_5ftinypb_5fserver_2eproto,
    file_level_service_descriptors_test_5ftinypb_5fserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_test_5ftinypb_5fserver_2eproto_getter() {
  return &descriptor_table_test_5ftinypb_5fserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_test_5ftinypb_5fserver_2eproto(&descriptor_table_test_5ftinypb_5fserver_2eproto);

// ===================================================================

class queryAgeReq::_Internal {
 public:
};

queryAgeReq::queryAgeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:queryAgeReq)
}
queryAgeReq::queryAgeReq(const queryAgeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  queryAgeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.req_no_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.req_no_, &from._impl_.req_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.req_no_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:queryAgeReq)
}

inline void queryAgeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.req_no_){0}
    , decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

queryAgeReq::~queryAgeReq() {
  // @@protoc_insertion_point(destructor:queryAgeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void queryAgeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void queryAgeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void queryAgeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:queryAgeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.req_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.req_no_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryAgeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 req_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.req_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryAgeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:queryAgeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 req_no = 1;
  if (this->_internal_req_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_req_no(), target);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:queryAgeReq)
  return target;
}

size_t queryAgeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:queryAgeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 req_no = 1;
  if (this->_internal_req_no() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_req_no());
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryAgeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    queryAgeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryAgeReq::GetClassData() const { return &_class_data_; }


void queryAgeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<queryAgeReq*>(&to_msg);
  auto& from = static_cast<const queryAgeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:queryAgeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_req_no() != 0) {
    _this->_internal_set_req_no(from._internal_req_no());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryAgeReq::CopyFrom(const queryAgeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:queryAgeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAgeReq::IsInitialized() const {
  return true;
}

void queryAgeReq::InternalSwap(queryAgeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryAgeReq, _impl_.id_)
      + sizeof(queryAgeReq::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(queryAgeReq, _impl_.req_no_)>(
          reinterpret_cast<char*>(&_impl_.req_no_),
          reinterpret_cast<char*>(&other->_impl_.req_no_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryAgeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_5ftinypb_5fserver_2eproto_getter, &descriptor_table_test_5ftinypb_5fserver_2eproto_once,
      file_level_metadata_test_5ftinypb_5fserver_2eproto[0]);
}

// ===================================================================

class queryAgeRes::_Internal {
 public:
};

queryAgeRes::queryAgeRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:queryAgeRes)
}
queryAgeRes::queryAgeRes(const queryAgeRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  queryAgeRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.res_info_){}
    , decltype(_impl_.ret_code_){}
    , decltype(_impl_.req_no_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.age_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.res_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.res_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_res_info().empty()) {
    _this->_impl_.res_info_.Set(from._internal_res_info(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.ret_code_, &from._impl_.ret_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.age_) -
    reinterpret_cast<char*>(&_impl_.ret_code_)) + sizeof(_impl_.age_));
  // @@protoc_insertion_point(copy_constructor:queryAgeRes)
}

inline void queryAgeRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.res_info_){}
    , decltype(_impl_.ret_code_){0}
    , decltype(_impl_.req_no_){0}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.age_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.res_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.res_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

queryAgeRes::~queryAgeRes() {
  // @@protoc_insertion_point(destructor:queryAgeRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void queryAgeRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.res_info_.Destroy();
}

void queryAgeRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void queryAgeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:queryAgeRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.res_info_.ClearToEmpty();
  ::memset(&_impl_.ret_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.age_) -
      reinterpret_cast<char*>(&_impl_.ret_code_)) + sizeof(_impl_.age_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryAgeRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ret_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ret_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string res_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_res_info();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "queryAgeRes.res_info"));
        } else
          goto handle_unusual;
        continue;
      // int32 req_no = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.req_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 age = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryAgeRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:queryAgeRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret_code = 1;
  if (this->_internal_ret_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_ret_code(), target);
  }

  // string res_info = 2;
  if (!this->_internal_res_info().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_res_info().data(), static_cast<int>(this->_internal_res_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "queryAgeRes.res_info");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_res_info(), target);
  }

  // int32 req_no = 3;
  if (this->_internal_req_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_req_no(), target);
  }

  // int32 id = 4;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_id(), target);
  }

  // int32 age = 5;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_age(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:queryAgeRes)
  return target;
}

size_t queryAgeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:queryAgeRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string res_info = 2;
  if (!this->_internal_res_info().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_res_info());
  }

  // int32 ret_code = 1;
  if (this->_internal_ret_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ret_code());
  }

  // int32 req_no = 3;
  if (this->_internal_req_no() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_req_no());
  }

  // int32 id = 4;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 age = 5;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_age());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryAgeRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    queryAgeRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryAgeRes::GetClassData() const { return &_class_data_; }


void queryAgeRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<queryAgeRes*>(&to_msg);
  auto& from = static_cast<const queryAgeRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:queryAgeRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_res_info().empty()) {
    _this->_internal_set_res_info(from._internal_res_info());
  }
  if (from._internal_ret_code() != 0) {
    _this->_internal_set_ret_code(from._internal_ret_code());
  }
  if (from._internal_req_no() != 0) {
    _this->_internal_set_req_no(from._internal_req_no());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryAgeRes::CopyFrom(const queryAgeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:queryAgeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryAgeRes::IsInitialized() const {
  return true;
}

void queryAgeRes::InternalSwap(queryAgeRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.res_info_, lhs_arena,
      &other->_impl_.res_info_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryAgeRes, _impl_.age_)
      + sizeof(queryAgeRes::_impl_.age_)
      - PROTOBUF_FIELD_OFFSET(queryAgeRes, _impl_.ret_code_)>(
          reinterpret_cast<char*>(&_impl_.ret_code_),
          reinterpret_cast<char*>(&other->_impl_.ret_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryAgeRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_5ftinypb_5fserver_2eproto_getter, &descriptor_table_test_5ftinypb_5fserver_2eproto_once,
      file_level_metadata_test_5ftinypb_5fserver_2eproto[1]);
}

// ===================================================================

class queryNameReq::_Internal {
 public:
};

queryNameReq::queryNameReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:queryNameReq)
}
queryNameReq::queryNameReq(const queryNameReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  queryNameReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.req_no_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.req_no_, &from._impl_.req_no_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.req_no_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:queryNameReq)
}

inline void queryNameReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.req_no_){0}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

queryNameReq::~queryNameReq() {
  // @@protoc_insertion_point(destructor:queryNameReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void queryNameReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void queryNameReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void queryNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:queryNameReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.req_no_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.req_no_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryNameReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 req_no = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.req_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryNameReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:queryNameReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 req_no = 1;
  if (this->_internal_req_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_req_no(), target);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // int32 type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:queryNameReq)
  return target;
}

size_t queryNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:queryNameReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 req_no = 1;
  if (this->_internal_req_no() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_req_no());
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 type = 3;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryNameReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    queryNameReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryNameReq::GetClassData() const { return &_class_data_; }


void queryNameReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<queryNameReq*>(&to_msg);
  auto& from = static_cast<const queryNameReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:queryNameReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_req_no() != 0) {
    _this->_internal_set_req_no(from._internal_req_no());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryNameReq::CopyFrom(const queryNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:queryNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryNameReq::IsInitialized() const {
  return true;
}

void queryNameReq::InternalSwap(queryNameReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryNameReq, _impl_.type_)
      + sizeof(queryNameReq::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(queryNameReq, _impl_.req_no_)>(
          reinterpret_cast<char*>(&_impl_.req_no_),
          reinterpret_cast<char*>(&other->_impl_.req_no_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryNameReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_5ftinypb_5fserver_2eproto_getter, &descriptor_table_test_5ftinypb_5fserver_2eproto_once,
      file_level_metadata_test_5ftinypb_5fserver_2eproto[2]);
}

// ===================================================================

class queryNameRes::_Internal {
 public:
};

queryNameRes::queryNameRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:queryNameRes)
}
queryNameRes::queryNameRes(const queryNameRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  queryNameRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.res_info_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.ret_code_){}
    , decltype(_impl_.req_no_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.res_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.res_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_res_info().empty()) {
    _this->_impl_.res_info_.Set(from._internal_res_info(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.ret_code_, &from._impl_.ret_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.ret_code_)) + sizeof(_impl_.id_));
  // @@protoc_insertion_point(copy_constructor:queryNameRes)
}

inline void queryNameRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.res_info_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.ret_code_){0}
    , decltype(_impl_.req_no_){0}
    , decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.res_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.res_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

queryNameRes::~queryNameRes() {
  // @@protoc_insertion_point(destructor:queryNameRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void queryNameRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.res_info_.Destroy();
  _impl_.name_.Destroy();
}

void queryNameRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void queryNameRes::Clear() {
// @@protoc_insertion_point(message_clear_start:queryNameRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.res_info_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.ret_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.ret_code_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* queryNameRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ret_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ret_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string res_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_res_info();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "queryNameRes.res_info"));
        } else
          goto handle_unusual;
        continue;
      // int32 req_no = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.req_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "queryNameRes.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* queryNameRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:queryNameRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret_code = 1;
  if (this->_internal_ret_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_ret_code(), target);
  }

  // string res_info = 2;
  if (!this->_internal_res_info().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_res_info().data(), static_cast<int>(this->_internal_res_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "queryNameRes.res_info");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_res_info(), target);
  }

  // int32 req_no = 3;
  if (this->_internal_req_no() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_req_no(), target);
  }

  // int32 id = 4;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_id(), target);
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "queryNameRes.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:queryNameRes)
  return target;
}

size_t queryNameRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:queryNameRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string res_info = 2;
  if (!this->_internal_res_info().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_res_info());
  }

  // string name = 5;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 ret_code = 1;
  if (this->_internal_ret_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ret_code());
  }

  // int32 req_no = 3;
  if (this->_internal_req_no() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_req_no());
  }

  // int32 id = 4;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData queryNameRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    queryNameRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*queryNameRes::GetClassData() const { return &_class_data_; }


void queryNameRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<queryNameRes*>(&to_msg);
  auto& from = static_cast<const queryNameRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:queryNameRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_res_info().empty()) {
    _this->_internal_set_res_info(from._internal_res_info());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_ret_code() != 0) {
    _this->_internal_set_ret_code(from._internal_ret_code());
  }
  if (from._internal_req_no() != 0) {
    _this->_internal_set_req_no(from._internal_req_no());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void queryNameRes::CopyFrom(const queryNameRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:queryNameRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool queryNameRes::IsInitialized() const {
  return true;
}

void queryNameRes::InternalSwap(queryNameRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.res_info_, lhs_arena,
      &other->_impl_.res_info_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(queryNameRes, _impl_.id_)
      + sizeof(queryNameRes::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(queryNameRes, _impl_.ret_code_)>(
          reinterpret_cast<char*>(&_impl_.ret_code_),
          reinterpret_cast<char*>(&other->_impl_.ret_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata queryNameRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_5ftinypb_5fserver_2eproto_getter, &descriptor_table_test_5ftinypb_5fserver_2eproto_once,
      file_level_metadata_test_5ftinypb_5fserver_2eproto[3]);
}

// ===================================================================

QueryService::~QueryService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* QueryService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_test_5ftinypb_5fserver_2eproto);
  return file_level_service_descriptors_test_5ftinypb_5fserver_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* QueryService::GetDescriptor() {
  return descriptor();
}

void QueryService::query_name(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::queryNameReq*,
                         ::queryNameRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method query_name() not implemented.");
  done->Run();
}

void QueryService::query_age(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::queryAgeReq*,
                         ::queryAgeRes*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method query_age() not implemented.");
  done->Run();
}

void QueryService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_test_5ftinypb_5fserver_2eproto[0]);
  switch(method->index()) {
    case 0:
      query_name(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::queryNameReq*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::queryNameRes*>(
                 response),
             done);
      break;
    case 1:
      query_age(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::queryAgeReq*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::queryAgeRes*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& QueryService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::queryNameReq::default_instance();
    case 1:
      return ::queryAgeReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& QueryService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::queryNameRes::default_instance();
    case 1:
      return ::queryAgeRes::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

QueryService_Stub::QueryService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
QueryService_Stub::QueryService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
QueryService_Stub::~QueryService_Stub() {
  if (owns_channel_) delete channel_;
}

void QueryService_Stub::query_name(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::queryNameReq* request,
                              ::queryNameRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void QueryService_Stub::query_age(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::queryAgeReq* request,
                              ::queryAgeRes* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::queryAgeReq*
Arena::CreateMaybeMessage< ::queryAgeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::queryAgeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::queryAgeRes*
Arena::CreateMaybeMessage< ::queryAgeRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::queryAgeRes >(arena);
}
template<> PROTOBUF_NOINLINE ::queryNameReq*
Arena::CreateMaybeMessage< ::queryNameReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::queryNameReq >(arena);
}
template<> PROTOBUF_NOINLINE ::queryNameRes*
Arena::CreateMaybeMessage< ::queryNameRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::queryNameRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
